[unix_http_server]
file=/tmp/supervisor.sock   ; (the path to the socket file)

[supervisord]
logfile=/tmp/supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/tmp/supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=false               ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)

[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/supervisor.sock ; use a unix:// URL  for a unix socket

; Need to wait for currently executing tasks to finish at shutdown.
; Increase this if you have very long running tasks.
stopwaitsecs = 60

; When resorting to send SIGKILL to the program to terminate it
; send SIGKILL to its whole process group instead,
; taking care of its children as well.
killasgroup=true

[program:mosquitto]
command=/usr/sbin/mosquitto -c /volume/config/mosquitto.conf
autorestart=true

[program:postgres]
command=/usr/lib/postgresql/9.6/bin/postgres -D /volume/postgres/data -c config_file=/volume/postgres/config/postgresql.conf
user=postgres
autorestart=true

[program:o2s]
directory=/pista
environment=O2SCONFIG="/pista/o2s.conf"
command=python o2s.py
autorestart=true
startretries=20
startsecs=8

[program:pista]
directory=/pista
command=python pista.py
autorestart=true
startretries=10
startsecs=8

[program:injectusers]
command=bash -c "sleep 10;/tmp/pista-inject-users.sh"
autorestart=unexpected
startsecs=0
startretries=10

[program:mqttwarn]
command=python mqttwarn.py
autorestart=true
startsecs=8
startretries=10
stopasgroup=true
environment=MQTTWARNINI="/volume/config/mqttwarn.ini"
directory=/opt/mqttwarn

